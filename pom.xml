<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.lzy.cloud</groupId>
    <artifactId>lzy-cloud</artifactId>
    <name>${project.artifactId}</name>
    <packaging>pom</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <modules>
        <module>lzy-common</module>
        <module>lzy-oauth</module>
        <module>lzy-gateway</module>
        <module>lzy-service</module>
        <module>lzy-service-api</module>
    </modules>

    <properties>
        <!-- jdk版本1.8 -->
        <java.version>1.8</java.version>
        <!-- maven-compiler-plugin插件版本，Java代码编译 -->
        <maven.plugin.version>3.8.1</maven.plugin.version>
        <!-- maven编译时指定编码UTF-8 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <!-- 项目统一字符集编码UTF-8 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 项目统一字符集编码UTF-8 -->
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Lzy项目统一设置版本号 -->
        <lzy.project.version>0.0.1-SNAPSHOT</lzy.project.version>
        <lzy.project.name>${project.artifactId}</lzy.project.name>
        <!-- SpringBoot版本号 -->
        <spring.boot.version>2.3.12.RELEASE</spring.boot.version>
        <!-- SpringCloud版本号 -->
        <spring.cloud.version>Hoxton.SR12</spring.cloud.version>
        <!-- hutool工具版本 -->
        <hutool.version>5.5.1</hutool.version>
        <mapstruct.version>1.4.1.Final</mapstruct.version>
        <lombok.version>1.18.12</lombok.version>
    </properties>

    <dependencies>
        <!-- Lombok 通过简单注解消除冗长代码  -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- hutool Java常用工具包-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.lzy.platform</groupId>
                <artifactId>lzy-platform-bom</artifactId>
                <version>${lzy.project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}-${profileName}</finalName>
        <resources>
            <!-- 增加分环境读取配置 -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.jks</exclude>
                    <exclude>static/**</exclude>
                </excludes>
            </resource>
            <!-- 解决jks被过滤掉的问题 -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.jks</include>
                    <include>static/**</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <!-- 能够将Spring Boot应用打包为可执行的jar或war文件，然后以通常的方式运行Spring Boot应用 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <configuration>
                        <fork>true</fork>
                        <finalName>${project.build.finalName}</finalName>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <!-- 引入 mapstruct-processor -->
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <!-- 引入 lombok-processor -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <encoding>UTF-8</encoding>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <activation>
                <!--默认为dev环境打包方式-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <id>dev</id>
            <properties>
                <profileName>dev</profileName>
                <spring.profiles.active>dev</spring.profiles.active>
                <nacos.addr>192.168.56.102:8848</nacos.addr>
                <nacos.config.prefix>lzy-cloud-config</nacos.config.prefix>
                <nacos.config.group>LZY_CLOUD</nacos.config.group>
                <docker.harbor.addr>192.168.56.102</docker.harbor.addr>
                <docker.harbor.project>lzycloud</docker.harbor.project>
                <docker.harbor.username>robot$lzycloud</docker.harbor.username>
                <docker.harbor.password>123456</docker.harbor.password>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <profileName>test</profileName>
                <spring.profiles.active>test</spring.profiles.active>
                <nacos.addr>192.168.56.102:8848</nacos.addr>
                <nacos.config.prefix>lzy-cloud-config</nacos.config.prefix>
                <nacos.config.group>LZY_CLOUD</nacos.config.group>
                <docker.harbor.addr>192.168.56.102</docker.harbor.addr>
                <docker.harbor.project>lzycloud</docker.harbor.project>
                <docker.harbor.username>robot$lzycloud</docker.harbor.username>
                <docker.harbor.password>123456</docker.harbor.password>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profileName>prod</profileName>
                <spring.profiles.active>prod</spring.profiles.active>
                <nacos.addr>192.168.56.102:8848</nacos.addr>
                <nacos.config.prefix>lzy-cloud-config</nacos.config.prefix>
                <nacos.config.group>LZY_CLOUD</nacos.config.group>
                <docker.harbor.addr>192.168.56.102</docker.harbor.addr>
                <docker.harbor.project>lzycloud</docker.harbor.project>
                <docker.harbor.username>robot$lzycloud</docker.harbor.username>
                <docker.harbor.password>123456</docker.harbor.password>
            </properties>
        </profile>
    </profiles>

</project>
